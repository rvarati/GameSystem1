<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--       -->
<!-- Top Level Game -->
<!-- Test Game 4 contains 1 act, 1 scene, 2 screens and a challenge-->
<!--       -->
<game>
     <!--       -->
     <!-- The game contains a default player with an initial point of 1000 -->
     <!--       -->
<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="PLAYER">
           <location>OSR</location>
           <size>LARGE</size>
           <!--       -->
           <!-- The profile of the player starts here -->
           <!--       -->
           <profile>
                <name> Default Player </name>
                <type> Protagonist </type>
		<!--		-->
		<!-- The player title change to Junior Programmer on successful completion of challenge 1 -->
		<!--		-->
                <title> Intern, Software Engineering </title>
                <skills> Software engineering, Unified Process, agile methods, project management, OO programming, IDE, configuration management, UML case tool, UM notation. </skills>
                <experience> 0 </experience>
                <communication> Good </communication>
                <leadership> Good </leadership>
                <teamwork> Good </teamwork>
                <demographics> Male, Caucasian </demographics>
                <degrees> NONE </degrees>
           </profile>
           <reward>
                <certificates>0</certificates>
                <hint>0</hint>
                <!--       -->
                <!-- The player initally has 1000 points -->
                <!--       -->
                <points>1000</points>
                <promotions>0</promotions>
                <trophies>0</trophies>
           </reward>
	   <behavior> 
		<levelOfEngagement> Positive </levelOfEngagement>
	   </behavior>
     </gameElement>
     <!--       -->
     <!--       -->
     <!-- The following section defines the constant values in test game 4 -->
     <!--	-->
     <!--	-->
     <gameConstants>
	   <!--		-->
           <!-- This game has a scene backdrop which CUTS IN in 'QUICK' amount of time -->
	   <!--		-->
           <timer name="QUICK">
                <value> 500 </value>
           </timer>
     </gameConstants>
     <!--       -->
     <!--       -->
     <!-- The static structure of the game starts here -->
     <!--       -->
     <!--       -->
	
	<actStructure>
                     <!--       -->
                     <!-- The act is identified as act1 -->
                     <!--       -->
		<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="IDENTIFIER">
			<id> act1 </id>
		</gameElement>
		<sceneStructure>
			<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
						xsi:type="IDENTIFIER">
				<id> scene1 </id>
			</gameElement>
			<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
					xsi:type="BACKDROP">
				<!-- -->
				<!-- The backdrop is presented -->
				<!-- -->
				<name>BlueSky.png</name>
			</gameElement>
			<screenStructure>
				<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
						xsi:type="prop">
						<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
							xsi:type="IDENTIFIER">
							<id> screen1_a </id>
						</gameElement>	
				<challengeStructure>
					<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
						xsi:type="prop">
						<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
							xsi:type="IDENTIFIER">
							<id> challenge1 </id>
						</gameElement>
<!-- 
++++ acts, scenes, screens, challenges are not game elements - need to rename
++++ challenge can have one or more items in it (questions)
++++ each item has learning objectives
++++ each question has a learning objective type: dialogue, deliberation, composition
++++ each option (answer) may have a hint
++++ each option has an evaluation (present)
++++ each option has a reward
++++ each stem question may have a hint
++++ please see sample questions in the quiz repository folder  -->


						<stemDescription>
							<type>
								<typeName>InformationBox</typeName>
							<event>
								<eventName>NONE</eventName>
								<animation>FADEIN</animation>
								<time>QUICK</time>
							</event>							
							<color>YELLOW</color>
							<location>UUR</location>
							<size>MEDIUM</size>
							<text> The designers need to use a complex AI algorithm that is available as a 3rd party component with an API. The designers know there are a number of possible components available on the marketplace, which are undergoing extensive performance evaluations. The final recommendation will not be available for several months.

</text>					

							</type>
						</stemDescription>
						<stemQuestion>
							<type>
								<typeName>InformationBox</typeName>
							<event>
								<eventName>NONE</eventName>
								<animation>FADEIN</animation>
								<time>QUICK</time>
							</event>							
							<color>YELLOW</color>
							<location>UUR</location>
							<size>MEDIUM</size>
							<text> Which design pattern would be suitable to reduce the impact of this eventual recommendation? </text>					
							</type>						
						</stemQuestion>
						<stemOption>
						<type>
							<typeName>Button</typeName>
							<name> Option1 </name>
							<text> Strategy Pattern </text>
							<location> UUL </location>
							<color> Yellow </color>
							<event>
								<eventName>NONE</eventName>
								<animation>FADEIN</animation>
								<time>QUICK</time>
							</event>
							<event>
								<eventName>Click</eventName>
								<animation>FADEOUT</animation>
								<evaluation> Incorrect </evaluation>
								<next> Screen1_b </next>
							</event>
						</type>
						</stemOption>
						<type>

							<typeName>Button</typeName>
							<name> Option2 </name>
							<text> Bridge Pattern </text>
							<location> UUC </location>
							<color> Yellow </color>
							<event>
								<eventName>NONE</eventName>
								<animation>FADEIN</animation>
								<time>QUICK</time>
							</event>
							<event>
								<eventName>Click</eventName>
								<animation>FADEOUT</animation>
								<evaluation> Correct </evaluation>
								<next> Screen1_b </next>
							</event>
						</type>
						<stemOption>
						<type>
							<typeName>Button</typeName>
							<name> Option3 </name>
							<text> Factory Pattern </text>
							<location> LLC </location>
							<color> Yellow </color>
							<event>
								<eventName>NONE</eventName>
								<animation>FADEIN</animation>
								<time>QUICK</time>
							</event>
							<event>
								<eventName>Click</eventName>
								<animation>FADEOUT</animation>
								<evaluation> Incorrect </evaluation>
								<next> Screen1_b </next>
							</event>
						</type>
						</stemOption>
						<stemOption>
						<type>
							<typeName>Button</typeName>
							<name> Option4 </name>
							<text> Singleton Pattern </text>
							<location> LLL </location>
							<color> Yellow </color>
							<event>
								<eventName>NONE</eventName>
								<animation>FADEIN</animation>
								<time>QUICK</time>
							</event>
							<event>
								<eventName>Click</eventName>
								<animation>FADEOUT</animation>
								<evaluation> Incorrect </evaluation>
								<next> Screen1_b </next>
							</event>
						</type>
						</stemOption>
					</gameElement>							
				</challengeStructure>

				</gameElement>
			</screenStructure>
			<!-- <screenStructure>
				<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
						xsi:type="prop">
						<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
							xsi:type="IDENTIFIER">
							<id> screen1_b </id>
						</gameElement>
						<type>
							<typeName>MessageBox</typeName>
							<color>YELLOW</color>
							<location>DC</location>
							<size>MEDIUM</size>
							<event>
								<eventName>NONE</eventName>
								<animation> FADEIN </animation>
								<time> QUICK </time>
							</event>
							<if>
							    <evaluation>Correct</evaluation>
							    <text> The Bridge Pattern is Correct! </text>
							    <behavior> Reward.AddPoints.500 </behavior>
						            <behavior> Reward.UpdateTitle.String("Junior Programmer") </behavior>
							    <next> screen2 </next>
							</if>
							<if>
							    <evaluation>Incorrect</evaluation>
							    <text> Sorry - The correct answer is bridge pattern </text>
							    <next> screen2 </next>
							</if> 
							<time> SCREEN_MEDIUM </time>
						</type>	
				</gameElement>	
			</screenStructure> -->	


<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++  --> 
				     
			<!--  <screenStructure>
				<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
						xsi:type="prop">
						<gameElement xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
							xsi:type="IDENTIFIER">
							<id> screen2 </id>
						</gameElement>	
				     <type>
							<typeName>InformationBox1</typeName>
							<event>
								<eventName>NONE</eventName>
								<animation>FADEIN</animation>
								<time>QUICK</time>
							</event>
							<event>
								<eventName>ENDGAME</eventName>
								<animation>FADEOUT</animation>
								<time>QUICK</time>
								<action> HIDE </action>
							</event>
						<color>YELLOW</color>
						<location>UC</location>
						<size>MEDIUM</size>
						<text>Your title is <behavior> Reward.GetTitle </behavior> 
						and you have <behavior> Reward.GetPoints </behavior> </text>
					</type>
					<type>
						<typeName>Button1</typeName>
						<event>
							<eventName>NONE</eventName>
							<animation> FADEIN </animation>
							<time> QUICK </time>
						</event>
						<event>
							<event_name>CLICK</event_name>
							<animation>FADEOUT</animation>
							<time> QUICK </time>
							<action> ENDGAME </action>
						</event>
						<color>YELLOW</color>
						<location>DC</location>
						<size>MEDIUM</size>
						<!-- -->
						<!-- The below text is presented on the button1 -->
						<!-- -->
						<!--  <text>End...</text>
					</type>	
			</gameElement>	
			</screenStructure>		-->			     	 	 
		</sceneStructure>
	</actStructure>				
</game>
